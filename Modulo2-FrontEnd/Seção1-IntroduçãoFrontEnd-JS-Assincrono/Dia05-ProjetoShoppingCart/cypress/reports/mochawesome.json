{
  "stats": {
    "suites": 12,
    "tests": 18,
    "passes": 16,
    "pending": 0,
    "failures": 2,
    "start": "2023-03-27T22:20:45.900Z",
    "end": "2023-03-27T22:21:17.951Z",
    "duration": 32051,
    "testsRegistered": 18,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9d0516d6-3427-4433-b198-90f4cd4ca20f",
      "title": "",
      "fullFile": "cypress/e2e/project.cy.js",
      "file": "cypress/e2e/project.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "35df99ee-93d8-4d83-a22a-cfeba93145d7",
          "title": "Shopping Cart Project",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "da95aec0-5416-4267-9f8a-f52740847358",
              "title": "1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 10672,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);",
                  "err": {},
                  "uuid": "6e01f03e-5abd-43a4-a284-8d8f6da037bb",
                  "parentUUID": "da95aec0-5416-4267-9f8a-f52740847358",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e01f03e-5abd-43a4-a284-8d8f6da037bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10672,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7ac61051-0312-46b2-ba9b-e1873e11a414",
              "title": "2 - Implemente a função fetchProductsList",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 314,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n  await fetchProductsList();\n  throw new Error('A função não retornou um erro');\n} catch (err) {\n  if (err.message === 'A função não retornou um erro') throw err;\n  expect(err.message).to.be.equal('Termo de busca não informado');\n}",
                  "err": {},
                  "uuid": "6cae9961-1f37-4df2-a868-880b52d6c823",
                  "parentUUID": "7ac61051-0312-46b2-ba9b-e1873e11a414",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "timedOut": null,
                  "duration": 188,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProductsList('computador');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/sites/MLB/search?q=computador');",
                  "err": {},
                  "uuid": "b8451446-3afb-476a-9568-e1584eae19ff",
                  "parentUUID": "7ac61051-0312-46b2-ba9b-e1873e11a414",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetchProductsList retorna os results da API",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna os results da API",
                  "timedOut": null,
                  "duration": 193,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(fetchProductsList('computador')).should('be.deep.equal', results);",
                  "err": {},
                  "uuid": "452c209d-6dbc-4398-b5ff-ba51d88fe459",
                  "parentUUID": "7ac61051-0312-46b2-ba9b-e1873e11a414",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cae9961-1f37-4df2-a868-880b52d6c823",
                "b8451446-3afb-476a-9568-e1584eae19ff",
                "452c209d-6dbc-4398-b5ff-ba51d88fe459"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 695,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "696557f7-382b-40d8-a8d9-14aaaee8ea8d",
              "title": "3 - Crie uma listagem de produtos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Listagem de produtos",
                  "fullTitle": "Shopping Cart Project 3 - Crie uma listagem de produtos Listagem de produtos",
                  "timedOut": null,
                  "duration": 351,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(PRODUCT_SELECTOR).should('exist').should('have.length', results.length).get(PRODUCT_TITLE).each(($el, index) => {\n  expect($el.text()).to.be.equal(results[index].title);\n});",
                  "err": {},
                  "uuid": "0e3dcd0e-dd06-4231-b014-bcae9ebf2c0d",
                  "parentUUID": "696557f7-382b-40d8-a8d9-14aaaee8ea8d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e3dcd0e-dd06-4231-b014-bcae9ebf2c0d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 351,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6e240ccd-0ef3-460c-b170-7d2ec94c4ba1",
              "title": "4 - Adicione um texto de `carregando` durante uma requisição à API",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "fullTitle": "Shopping Cart Project 4 - Adicione um texto de `carregando` durante uma requisição à API Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "timedOut": null,
                  "duration": 4361,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch = url => new Promise(resolve => {\n      setTimeout(() => {\n        fetchMock(url).then(resolve);\n      }, 1000);\n    });\n  }\n});\ncy.get(LOADING).should('be.visible').wait(3000);\ncy.get(LOADING).should('not.exist');",
                  "err": {},
                  "uuid": "ed4c2550-0759-4577-bf88-286ba7c68814",
                  "parentUUID": "6e240ccd-0ef3-460c-b170-7d2ec94c4ba1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed4c2550-0759-4577-bf88-286ba7c68814"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4361,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f61ae7d0-49bd-4175-b3c3-884e997dabd6",
              "title": "5 - Exiba um texto de `erro` caso a requisição à API falhe",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "timedOut": null,
                  "duration": 175,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(ERRO).should('not.exist');",
                  "err": {},
                  "uuid": "d5df9e36-2fa7-40eb-ae8b-32aa3405e00a",
                  "parentUUID": "f61ae7d0-49bd-4175-b3c3-884e997dabd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "timedOut": null,
                  "duration": 283,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch.callsFake(() => Promise.reject(new Error('API is down')));\n  }\n});\ncy.get(ERRO).should('be.visible');",
                  "err": {},
                  "uuid": "7b66d532-743a-44c6-9d85-12730283cca3",
                  "parentUUID": "f61ae7d0-49bd-4175-b3c3-884e997dabd6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5df9e36-2fa7-40eb-ae8b-32aa3405e00a",
                "7b66d532-743a-44c6-9d85-12730283cca3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 458,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "51fbebea-cdf7-45f0-9185-265092c2639e",
              "title": "6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 192,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);",
                  "err": {},
                  "uuid": "1bcc8c41-e598-4f8f-bb57-818f060ae3bc",
                  "parentUUID": "51fbebea-cdf7-45f0-9185-265092c2639e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bcc8c41-e598-4f8f-bb57-818f060ae3bc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 192,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "946af9b6-c246-471e-a995-e098e09d9034",
              "title": "7 - Implemente a função `fetchProduct`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 163,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct().then(() => done(new Error('A função não retornou um erro'))).catch(err => {\n  expect(err.message).to.be.equal('ID não informado');\n  done();\n});",
                  "err": {},
                  "uuid": "ac111c3d-091e-4c79-a0db-17721c0c52f6",
                  "parentUUID": "946af9b6-c246-471e-a995-e098e09d9034",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "timedOut": null,
                  "duration": 168,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct('MLB1405519561');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/items/MLB1405519561');",
                  "err": {},
                  "uuid": "ae2855d5-0fd6-4587-ad5a-2319e0b8900e",
                  "parentUUID": "946af9b6-c246-471e-a995-e098e09d9034",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetchProduct retorna os dados do produto",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna os dados do produto",
                  "timedOut": null,
                  "duration": 165,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const expectedResult = results.find(({\n  id\n}) => id === 'MLB1405519561');\ncy.wrap(fetchProduct('MLB1405519561')).should('be.deep.equal', _objectSpread(_objectSpread({}, expectedResult), {}, {\n  pictures\n}));",
                  "err": {},
                  "uuid": "707cab09-78ce-4193-80d9-5bc34fe06ddc",
                  "parentUUID": "946af9b6-c246-471e-a995-e098e09d9034",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac111c3d-091e-4c79-a0db-17721c0c52f6",
                "ae2855d5-0fd6-4587-ad5a-2319e0b8900e",
                "707cab09-78ce-4193-80d9-5bc34fe06ddc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 496,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "315d818d-dc98-4e4c-a3a5-77bd79295918",
              "title": "8 - Adicione o produto ao carrinho de compras",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicione o produto ao carrinho de compras",
                  "fullTitle": "Shopping Cart Project 8 - Adicione o produto ao carrinho de compras Adicione o produto ao carrinho de compras",
                  "timedOut": null,
                  "duration": 1403,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(1000);\naddToCart(36);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);",
                  "err": {},
                  "uuid": "e99f2ec9-06e0-4f74-be4b-531289513bd9",
                  "parentUUID": "315d818d-dc98-4e4c-a3a5-77bd79295918",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e99f2ec9-06e0-4f74-be4b-531289513bd9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1403,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ad324431-3b0c-431f-9387-60ab16402e35",
              "title": "9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "fullTitle": "Shopping Cart Project 9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "timedOut": null,
                  "duration": 613,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const first = 36;\nconst last = 29;\naddToCart(first);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\naddToCart(last);\ncountCart(2);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncy.reload();\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncountCart(2);",
                  "err": {},
                  "uuid": "3de23b68-a885-4ab9-aac9-37fa1ea28639",
                  "parentUUID": "ad324431-3b0c-431f-9387-60ab16402e35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3de23b68-a885-4ab9-aac9-37fa1ea28639"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 613,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "71b3a1ec-013e-42a0-b89d-f951da0853d5",
              "title": "10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "timedOut": null,
                  "duration": 875,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(5);\ncheckPrice(results, [5]);\naddToCart(42);\ncheckPrice(results, [5, 42]);\naddToCart(36);\ncheckPrice(results, [5, 42, 36]);\naddToCart(15);\ncheckPrice(results, [5, 42, 36, 15]);\ncy.get(CART_PRODUCTS).children().eq(1).click();\ncheckPrice(results, [5, 36, 15]);",
                  "err": {},
                  "uuid": "00110543-6fc0-48a2-b598-b68791a44fb6",
                  "parentUUID": "71b3a1ec-013e-42a0-b89d-f951da0853d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "timedOut": null,
                  "duration": 736,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(15);\ncheckPrice(results, [15]);\naddToCart(45);\ncheckPrice(results, [15, 45]);\ncy.reload();\ncheckPrice(results, [15, 45]);\ncy.get(CART_PRODUCTS).children().first().click();\ncheckPrice(results, [45]);\ncy.reload();\ncheckPrice(results, [45]);",
                  "err": {},
                  "uuid": "2a20344d-590f-4f14-8665-35254de4d2a2",
                  "parentUUID": "71b3a1ec-013e-42a0-b89d-f951da0853d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00110543-6fc0-48a2-b598-b68791a44fb6",
                "2a20344d-590f-4f14-8665-35254de4d2a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1611,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0c951535-07ac-4863-af56-4d1cf810a561",
              "title": "11 - Implemente a função `getAddress`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica se o endereço é exibido após o CEP ser digitado",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se o endereço é exibido após o CEP ser digitado",
                  "timedOut": null,
                  "duration": 4649,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    cy.spy(win.Promise, 'any');\n  }\n});\ncy.get(CEP_INPUT).type('01001000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'Praça da Sé - Sé - São Paulo - SP');\ncy.window().its('Promise.any').should('be.called');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'Praça da Sé - Sé - São Paulo - SP', but the text was ''",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'Praça da Sé - Sé - São Paulo - SP', but the text was ''\n    at Context.eval (http://localhost:5173/__cypress/tests?p=cypress/e2e/project.cy.js:391:28)",
                    "diff": "+ 'Praça da Sé - Sé - São Paulo - SP'\n"
                  },
                  "uuid": "90493f34-5df8-4a8c-9a2d-62ec16138cf0",
                  "parentUUID": "0c951535-07ac-4863-af56-4d1cf810a561",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "timedOut": null,
                  "duration": 4497,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(CEP_INPUT).type('00000000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'CEP não encontrado');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'CEP não encontrado', but the text was ''",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'CEP não encontrado', but the text was ''\n    at Context.eval (http://localhost:5173/__cypress/tests?p=cypress/e2e/project.cy.js:397:28)",
                    "diff": "+ 'CEP não encontrado'\n"
                  },
                  "uuid": "82409ff4-bdf0-464e-a2a1-a036e8d71e2b",
                  "parentUUID": "0c951535-07ac-4863-af56-4d1cf810a561",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "90493f34-5df8-4a8c-9a2d-62ec16138cf0",
                "82409ff4-bdf0-464e-a2a1-a036e8d71e2b"
              ],
              "pending": [],
              "skipped": [],
              "duration": 9146,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
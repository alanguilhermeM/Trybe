{
  "stats": {
    "suites": 10,
    "tests": 34,
    "passes": 28,
    "pending": 0,
    "failures": 6,
    "start": "2023-05-17T14:30:46.427Z",
    "end": "2023-05-17T14:31:38.870Z",
    "duration": 52443,
    "testsRegistered": 34,
    "passPercent": 82.35294117647058,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6c61995b-335c-4581-b665-45d864505a3b",
      "title": "",
      "fullFile": "cypress/e2e/_requirements/00.RunAll.cy.js",
      "file": "cypress/e2e/_requirements/00.RunAll.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd1f771d-e238-4a92-95b8-2c4d85c82bff",
          "title": "1 - Crie uma página inicial de login com os seguintes campos e características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A rota para esta página deve ser '/'",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: A rota para esta página deve ser '/'",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "555a443d-52da-423a-9d77-c19f60c88893",
              "parentUUID": "dd1f771d-e238-4a92-95b8-2c4d85c82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um local para que o usuário insira seu email e senha",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Crie um local para que o usuário insira seu email e senha",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).should('exist');\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "323c36b0-8f15-4fa4-b8fd-cf9177758d87",
              "parentUUID": "dd1f771d-e238-4a92-95b8-2c4d85c82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um botão com o texto 'Entrar'",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Crie um botão com o texto 'Entrar'",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/Entrar/i).should('exist');",
              "err": {},
              "uuid": "11d68ebc-2f90-4498-84f1-d60d4b4bb49e",
              "parentUUID": "dd1f771d-e238-4a92-95b8-2c4d85c82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realize as seguintes verificações nos campos de email, senha e botão:",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Realize as seguintes verificações nos campos de email, senha e botão:",
              "timedOut": null,
              "duration": 2667,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).type(_constants.INVALID_EMAIL_0);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_1);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_2);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.INVALID_EMAIL_3);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.VALID_EMAIL);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.INVALID_PASSWORD);\ncy.contains(/Entrar/i).should('be.disabled');\ncy.getByTestId(_constants.EMAIL_INPUT_TEST_ID).clear().type(_constants.VALID_EMAIL);\ncy.getByTestId(_constants.PASSWORD_INPUT_TEST_ID).clear().type(_constants.VALID_PASSWORD);\ncy.contains(/Entrar/i).should('not.be.disabled');",
              "err": {},
              "uuid": "00553da6-2b5a-48b8-a978-fb0c24b3c747",
              "parentUUID": "dd1f771d-e238-4a92-95b8-2c4d85c82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Salve o email no estado da aplicação, com a chave email, assim que o usuário logar.",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: Salve o email no estado da aplicação, com a chave email, assim que o usuário logar.",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helperFunctions.logInWithValidCredentials)();\ncy.window().its('store').invoke('getState').its('user.email').should('eq', _constants.VALID_EMAIL);",
              "err": {},
              "uuid": "2e226c17-353d-4b65-9cd8-d5395bd74b89",
              "parentUUID": "dd1f771d-e238-4a92-95b8-2c4d85c82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A rota deve ser mudada para '/carteira' após o clique no botão.",
              "fullTitle": "1 - Crie uma página inicial de login com os seguintes campos e características: A rota deve ser mudada para '/carteira' após o clique no botão.",
              "timedOut": null,
              "duration": 657,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helperFunctions.logInWithValidCredentials)();\ncy.location('pathname').should('eq', '/carteira');",
              "err": {},
              "uuid": "c904bed8-9f0a-4070-9b3b-2d8e7e1c3f6f",
              "parentUUID": "dd1f771d-e238-4a92-95b8-2c4d85c82bff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "555a443d-52da-423a-9d77-c19f60c88893",
            "323c36b0-8f15-4fa4-b8fd-cf9177758d87",
            "11d68ebc-2f90-4498-84f1-d60d4b4bb49e",
            "00553da6-2b5a-48b8-a978-fb0c24b3c747",
            "2e226c17-353d-4b65-9cd8-d5395bd74b89",
            "c904bed8-9f0a-4070-9b3b-2d8e7e1c3f6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fc990c4b-0929-451a-b2ae-cf097a2d86b3",
          "title": "2 - Crie um header para a página de carteira contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Um elemento que exiba o email do usuário que fez login.",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Um elemento que exiba o email do usuário que fez login.",
              "timedOut": null,
              "duration": 651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.EMAIL_FIELD_TEST_ID).should('contain', _constants.VALID_EMAIL);",
              "err": {},
              "uuid": "a55ab649-729c-4a17-9ad8-8b38de4e1959",
              "parentUUID": "fc990c4b-0929-451a-b2ae-cf097a2d86b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um campo com a despesa total gerada pela lista de gastos.",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Crie um campo com a despesa total gerada pela lista de gastos.",
              "timedOut": null,
              "duration": 645,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('contain', '0');",
              "err": {},
              "uuid": "f8fddb50-90b2-4d0a-9a9d-526c9ed528b1",
              "parentUUID": "fc990c4b-0929-451a-b2ae-cf097a2d86b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um campo que mostre que qual câmbio está sendo utilizado, que será neste caso 'BRL'",
              "fullTitle": "2 - Crie um header para a página de carteira contendo as seguintes características: Crie um campo que mostre que qual câmbio está sendo utilizado, que será neste caso 'BRL'",
              "timedOut": null,
              "duration": 661,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.HEADER_CURRENCY_FIELD_TEST_ID).should('contain', 'BRL');",
              "err": {},
              "uuid": "5ddd389c-e244-4639-97fc-5d1c00eb2ba7",
              "parentUUID": "fc990c4b-0929-451a-b2ae-cf097a2d86b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a55ab649-729c-4a17-9ad8-8b38de4e1959",
            "f8fddb50-90b2-4d0a-9a9d-526c9ed528b1",
            "5ddd389c-e244-4639-97fc-5d1c00eb2ba7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1957,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5582d6e5-7c15-41e9-9ab3-bd161df9bc62",
          "title": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Um campo para adicionar o valor da despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para adicionar o valor da despesa",
              "timedOut": null,
              "duration": 717,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "585a1fb2-374a-4440-824a-934505ee312f",
              "parentUUID": "5582d6e5-7c15-41e9-9ab3-bd161df9bc62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para adicionar a descrição da despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para adicionar a descrição da despesa",
              "timedOut": null,
              "duration": 631,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('exist');",
              "err": {},
              "uuid": "8fc552be-fbcb-4f14-ab64-7a62b4065efb",
              "parentUUID": "5582d6e5-7c15-41e9-9ab3-bd161df9bc62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar em qual moeda será registrada a despesa",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar em qual moeda será registrada a despesa",
              "timedOut": null,
              "duration": 856,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.CURRENCY_INPUT_TEST_ID).find('option').should('have.length', _constants.currenciesOptions.length);\ncy.wrap(_constants.currenciesOptions).each(currency => {\n  cy.getByTestId(_constants.CURRENCY_INPUT_TEST_ID).contains('option', currency).should('exist');\n});",
              "err": {},
              "uuid": "c73c44e1-10c9-4796-ac84-15a9abae28c9",
              "parentUUID": "5582d6e5-7c15-41e9-9ab3-bd161df9bc62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A chave currencies no estado global deve ser um array de siglas puxadas através de uma requisição à API",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: A chave currencies no estado global deve ser um array de siglas puxadas através de uma requisição à API",
              "timedOut": null,
              "duration": 634,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@mockFetch').should('be.calledWith', 'https://economia.awesomeapi.com.br/json/all');\ncy.window().its('store').invoke('getState').its('wallet.currencies').should('deep.equal', _constants.currenciesOptions);",
              "err": {},
              "uuid": "65bccaed-1f37-499c-87dc-c9ade4cf1882",
              "parentUUID": "5582d6e5-7c15-41e9-9ab3-bd161df9bc62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar qual método de pagamento será utilizado",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar qual método de pagamento será utilizado",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.METHOD_INPUT_TEST_ID).find('option').should('have.length', _constants.methodOptions.length);\ncy.wrap(_constants.methodOptions).each(method => {\n  cy.getByTestId(_constants.METHOD_INPUT_TEST_ID).contains('option', method).should('exist');\n});",
              "err": {},
              "uuid": "c1c4e0a2-04a1-453b-9261-dafb532616dd",
              "parentUUID": "5582d6e5-7c15-41e9-9ab3-bd161df9bc62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Um campo para selecionar uma categoria (tag) para a despesa.",
              "fullTitle": "3 - Desenvolva um formulário para adicionar uma despesa contendo as seguintes características: Um campo para selecionar uma categoria (tag) para a despesa.",
              "timedOut": null,
              "duration": 692,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TAG_INPUT_TEST_ID).find('option').should('have.length', _constants.tagOptions.length);\ncy.wrap(_constants.tagOptions).each(tag => {\n  cy.getByTestId(_constants.TAG_INPUT_TEST_ID).contains('option', tag).should('exist');\n});",
              "err": {},
              "uuid": "8f364621-c1ef-447c-b23c-18ff6fa77fde",
              "parentUUID": "5582d6e5-7c15-41e9-9ab3-bd161df9bc62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "585a1fb2-374a-4440-824a-934505ee312f",
            "8fc552be-fbcb-4f14-ab64-7a62b4065efb",
            "c73c44e1-10c9-4796-ac84-15a9abae28c9",
            "65bccaed-1f37-499c-87dc-c9ade4cf1882",
            "c1c4e0a2-04a1-453b-9261-dafb532616dd",
            "8f364621-c1ef-447c-b23c-18ff6fa77fde"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82b1333f-542a-416a-9159-1fdcecc2aafe",
          "title": "4 - Salve todas as informações do formulário no estado global",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a soma de despesas do header foi atualizada e os inputs voltaram ao valor inicial",
              "timedOut": null,
              "duration": 1610,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '52.28');\ncy.getByTestId(_constants.VALUE_INPUT_TEST_ID).should('have.value', '');\ncy.getByTestId(_constants.DESCRIPTION_INPUT_TEST_ID).should('have.value', '');",
              "err": {},
              "uuid": "4027ca7e-cd9b-4316-bf00-e66b393d2627",
              "parentUUID": "82b1333f-542a-416a-9159-1fdcecc2aafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona uma despesa e verifica se a despesa foi salva no estado global",
              "timedOut": null,
              "duration": 1570,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\n(0, _helperFunctions.addExpense)(expense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [_objectSpread(_objectSpread({}, expense), {}, {\n  id: 0,\n  exchangeRates: _data.mockData\n})]);",
              "err": {},
              "uuid": "b025de50-3d7b-409d-86e6-62870b179578",
              "parentUUID": "82b1333f-542a-416a-9159-1fdcecc2aafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Verifica se a API é chamada a cada vez que o botão 'Adicionar despesa' é clicado",
              "timedOut": null,
              "duration": 2519,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expense = {\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares'\n};\ncy.get('@mockFetch').should('be.calledOnce');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledTwice');\n(0, _helperFunctions.addExpense)(expense);\ncy.get('@mockFetch').should('be.calledThrice');",
              "err": {},
              "uuid": "fc1074d6-7fed-4375-afb4-17b0d418d1ec",
              "parentUUID": "82b1333f-542a-416a-9159-1fdcecc2aafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "fullTitle": "4 - Salve todas as informações do formulário no estado global Adiciona duas despesas e verifica se o estado global e header foram atualizados",
              "timedOut": null,
              "duration": 2487,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const firstExpense = {\n  id: 0,\n  value: '11',\n  currency: 'USD',\n  method: 'Cartão de crédito',\n  tag: 'Lazer',\n  description: 'Onze dólares',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(firstExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense]);\nconst secondExpense = {\n  id: 1,\n  value: '20',\n  currency: 'EUR',\n  method: 'Cartão de débito',\n  tag: 'Trabalho',\n  description: 'Vinte euros',\n  exchangeRates: _data.mockData\n};\n(0, _helperFunctions.addExpense)(secondExpense);\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', [firstExpense, secondExpense]);\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '154.82');",
              "err": {},
              "uuid": "7ee98399-d610-42e9-a272-45d5bcccea9e",
              "parentUUID": "82b1333f-542a-416a-9159-1fdcecc2aafe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4027ca7e-cd9b-4316-bf00-e66b393d2627",
            "b025de50-3d7b-409d-86e6-62870b179578",
            "fc1074d6-7fed-4375-afb4-17b0d418d1ec",
            "7ee98399-d610-42e9-a272-45d5bcccea9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eec29be8-0bc6-4eda-acf6-4dc263022e3c",
          "title": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cobertura de \"Statements\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Statements\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 3551,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.statements.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {},
              "uuid": "aaa3dd2c-b301-4076-8a5e-2d8a50f59c6b",
              "parentUUID": "eec29be8-0bc6-4eda-acf6-4dc263022e3c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Functions\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Functions\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 32,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.functions.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 55.81 to be at least 60",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 55.81 to be at least 60\n    at Context.eval (webpack:///./cypress/e2e/_requirements/05.TestCoverage.cy.js:9:79)",
                "diff": "- 55.81\n+ 60\n"
              },
              "uuid": "02cb0dae-9c7a-4660-8da7-73302b1ec80d",
              "parentUUID": "eec29be8-0bc6-4eda-acf6-4dc263022e3c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Branches\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Branches\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.branches.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {},
              "uuid": "a9b94edd-c8c6-462e-a1c6-13b48f994633",
              "parentUUID": "eec29be8-0bc6-4eda-acf6-4dc263022e3c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Lines\" total deverá ser maior ou igual a 60.",
              "fullTitle": "5 - Desenvolva testes para atingir 60% de cobertura total da aplicação Cobertura de \"Lines\" total deverá ser maior ou igual a 60.",
              "timedOut": null,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.lines.pct', {\n  timeout: 0\n}).should('be.gte', 60.00);",
              "err": {},
              "uuid": "b75f7c8e-b422-43c9-819b-a45b739e6752",
              "parentUUID": "eec29be8-0bc6-4eda-acf6-4dc263022e3c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aaa3dd2c-b301-4076-8a5e-2d8a50f59c6b",
            "a9b94edd-c8c6-462e-a1c6-13b48f994633",
            "b75f7c8e-b422-43c9-819b-a45b739e6752"
          ],
          "failures": [
            "02cb0dae-9c7a-4660-8da7-73302b1ec80d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3de3fabd-5e2c-4c08-8e73-12d08f651367",
          "title": "6 - Desenvolva uma tabela com os gastos contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tabela deve possuir um cabeçalho com os campos Descrição, Tag, Método de pagamento, Valor, Moeda, Câmbio utilizado, Valor convertido e Moeda de conversão",
              "fullTitle": "6 - Desenvolva uma tabela com os gastos contendo as seguintes características: A tabela deve possuir um cabeçalho com os campos Descrição, Tag, Método de pagamento, Valor, Moeda, Câmbio utilizado, Valor convertido e Moeda de conversão",
              "timedOut": null,
              "duration": 763,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').should('have.length', _constants.tableHeaderList.length);\ncy.wrap(_constants.tableHeaderList).each(header => {\n  cy.get('th').contains(header);\n});",
              "err": {},
              "uuid": "0617c06f-9914-411b-a6e6-d538d9caf7bd",
              "parentUUID": "3de3fabd-5e2c-4c08-8e73-12d08f651367",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0617c06f-9914-411b-a6e6-d538d9caf7bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86af0e8d-bdf4-4e92-ab55-8532304fc814",
          "title": "7 - Implemente a lógica para que a tabela seja alimentada pelo estado da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A tabela deve ser alimentada pelo estado da aplicação, que estará disponível na chave expenses que vem do reducer wallet.",
              "fullTitle": "7 - Implemente a lógica para que a tabela seja alimentada pelo estado da aplicação A tabela deve ser alimentada pelo estado da aplicação, que estará disponível na chave expenses que vem do reducer wallet.",
              "timedOut": null,
              "duration": 2691,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedTableRows = [['Dez dólares', 'Trabalho', 'Cartão de débito', '10.00', 'Dólar Americano/Real Brasileiro', '4.75', '47.53', 'Real'], ['Cinco euros', 'Lazer', 'Cartão de crédito', '5.00', 'Euro/Real Brasileiro', '5.13', '25.63', 'Real']];\ncy.get('tbody tr').should('have.length', expectedTableRows.length);\ncy.get('tbody tr').each((row, index) => {\n  cy.wrap(expectedTableRows[index]).each(expectedValue => {\n    cy.get(row).find('td').contains(expectedValue);\n  });\n});",
              "err": {},
              "uuid": "ec167bed-2738-4356-aaae-8b4b3768966f",
              "parentUUID": "86af0e8d-bdf4-4e92-ab55-8532304fc814",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec167bed-2738-4356-aaae-8b4b3768966f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2691,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ac7c6662-8759-4d5e-a9fc-e39eb78ee0d3",
          "title": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"delete-btn\"`",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"delete-btn\"`",
              "timedOut": null,
              "duration": 2548,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('tbody tr').first().find('td').last().find(`button[data-testid=\"${_constants.BTN_DELETE_TEST_ID}\"]`).should('exist');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).should('have.length', 2);",
              "err": {},
              "uuid": "22cf7c70-2ce0-4568-9696-af7ba7fdc353",
              "parentUUID": "ac7c6662-8759-4d5e-a9fc-e39eb78ee0d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao ser clicado, o botão deleta a linha da tabela, alterando o estado global.",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: Ao ser clicado, o botão deleta a linha da tabela, alterando o estado global.",
              "timedOut": null,
              "duration": 2728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedTableRow = ['Cinco euros', 'Lazer', 'Cartão de crédito', '5.00', 'Euro/Real Brasileiro', '5.13', '25.63', 'Real'];\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click().should('not.exist');\nconst deleteBtn = 1;\ncy.get('tbody tr td').should('have.length', expectedTableRow.length + deleteBtn);\ncy.wrap(expectedTableRow).each(expectedValue => {\n  cy.get('tbody tr td').contains(expectedValue);\n});\nconst expectedExpenses = [_objectSpread(_objectSpread({}, _constants.initialExpenses[1]), {}, {\n  id: 1,\n  exchangeRates: _data.mockData\n})];\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', expectedExpenses);",
              "err": {},
              "uuid": "007fe1e0-6078-48c9-9971-361b729d25d2",
              "parentUUID": "ac7c6662-8759-4d5e-a9fc-e39eb78ee0d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao clicar no botão para remover uma despesa, o valor correspondente deve ser subtraído e a despesa total deve ser atualizada no header",
              "fullTitle": "8 - Crie um botão para deletar uma despesa da tabela contendo as seguintes características: Ao clicar no botão para remover uma despesa, o valor correspondente deve ser subtraído e a despesa total deve ser atualizada no header",
              "timedOut": null,
              "duration": 2650,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '73.16');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click();\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '25.63');\ncy.getByTestId(_constants.BTN_DELETE_TEST_ID).first().click();\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '0.00');",
              "err": {},
              "uuid": "7fddf9ca-2052-4c0a-8629-3529b8d30f3c",
              "parentUUID": "ac7c6662-8759-4d5e-a9fc-e39eb78ee0d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22cf7c70-2ce0-4568-9696-af7ba7fdc353",
            "007fe1e0-6078-48c9-9971-361b729d25d2",
            "7fddf9ca-2052-4c0a-8629-3529b8d30f3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7926,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7bbc653c-a1f5-4701-b071-6c9ea8c098e2",
          "title": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "timedOut": null,
              "duration": 2519,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('tbody tr').first().find('td').last().find(`button[data-testid=\"${_constants.BTN_EDIT_TEST_ID}\"]`).should('exist');\ncy.getByTestId(_constants.BTN_EDIT_TEST_ID).should('have.length', 2);",
              "err": {},
              "uuid": "edd99e0f-efaa-423a-aa4d-8aa8973642a7",
              "parentUUID": "7bbc653c-a1f5-4701-b071-6c9ea8c098e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "timedOut": null,
              "duration": 13609,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.BTN_EDIT_TEST_ID).first().click();\ncy.contains(/Adicionar despesa/i).should('not.exist');\ncy.contains(/Editar despesa/i).should('exist');\n(0, _helperFunctions.editExpense)({\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses'\n});\nconst expectedTableRow = ['Duzentos dólares canadenses', 'Saúde', 'Dinheiro', '200.00', 'Dólar Canadense/Real Brasileiro', '3.76', '751.18', 'Real'];\nconst deleteBtn = 1;\ncy.get('tbody tr').first().find('td').should('have.length', expectedTableRow.length + deleteBtn);\ncy.wrap(expectedTableRow).each(expectedValue => {\n  cy.get('tbody tr').first().find('td').contains(expectedValue);\n});\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '776.81');\nconst expectedExpenses = [{\n  id: 0,\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses',\n  exchangeRates: _data.mockData\n}, _objectSpread(_objectSpread({}, _constants.initialExpenses[1]), {}, {\n  id: 1,\n  exchangeRates: _data.mockData\n})];\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', expectedExpenses);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Duzentos dólares canadenses' within the element: [ <td>, 8 more... ] but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Duzentos dólares canadenses' within the element: [ <td>, 8 more... ] but never did.\n    at Context.eval (webpack:///./cypress/e2e/_requirements/09.EditExpense.cy.js:52:44)",
                "diff": null
              },
              "uuid": "2c1f9b24-84b7-4012-81e7-7e229ba7c00d",
              "parentUUID": "7bbc653c-a1f5-4701-b071-6c9ea8c098e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edd99e0f-efaa-423a-aa4d-8aa8973642a7"
          ],
          "failures": [
            "2c1f9b24-84b7-4012-81e7-7e229ba7c00d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cdffc3b9-ebfc-4d01-899e-7b78e4ddda26",
          "title": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cobertura de \"Statements\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Statements\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 49,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.statements.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 66.14 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 66.14 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:5:80)",
                "diff": "- 66.14\n+ 90\n"
              },
              "uuid": "8152559e-0be4-49c0-8a53-6a0db87c348d",
              "parentUUID": "cdffc3b9-ebfc-4d01-899e-7b78e4ddda26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Functions\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Functions\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 93,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.functions.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 55.81 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 55.81 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:9:79)",
                "diff": "- 55.81\n+ 90\n"
              },
              "uuid": "053bf4d8-34d3-4dd6-a185-2a8f238fe7a1",
              "parentUUID": "cdffc3b9-ebfc-4d01-899e-7b78e4ddda26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Branches\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Branches\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 43,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.branches.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 64.28 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 64.28 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:13:78)",
                "diff": "- 64.28\n+ 90\n"
              },
              "uuid": "7881a2f3-6325-42c8-9630-4efe68669eda",
              "parentUUID": "cdffc3b9-ebfc-4d01-899e-7b78e4ddda26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cobertura de \"Lines\" total deverá ser maior ou igual a 90.",
              "fullTitle": "10 - Desenvolva testes para atingir 90% de cobertura total da aplicação Cobertura de \"Lines\" total deverá ser maior ou igual a 90.",
              "timedOut": null,
              "duration": 51,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', (0, _getId.getId)()).its('total.lines.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "AssertionError: Timed out retrying after 0ms: expected 69.91 to be at least 90",
                "estack": "AssertionError: Timed out retrying after 0ms: expected 69.91 to be at least 90\n    at Context.eval (webpack:///./cypress/e2e/_requirements/10.TestCoverage.cy.js:17:75)",
                "diff": "- 69.91\n+ 90\n"
              },
              "uuid": "970259a6-d218-445d-8364-573307a35af0",
              "parentUUID": "cdffc3b9-ebfc-4d01-899e-7b78e4ddda26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8152559e-0be4-49c0-8a53-6a0db87c348d",
            "053bf4d8-34d3-4dd6-a185-2a8f238fe7a1",
            "7881a2f3-6325-42c8-9630-4efe68669eda",
            "970259a6-d218-445d-8364-573307a35af0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 236,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}